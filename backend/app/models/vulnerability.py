# JADE Ultimate Security Platform - Vulnerability Model

from sqlalchemy import Column, String, Boolean, DateTime, Integer, Float, JSON, func, Enum
from sqlalchemy.dialects.postgresql import UUID as PG_UUID
from uuid import uuid4
from app.core.database import Base
import enum

class Severity(str, enum.Enum):
    CRITICAL = "critical"
    HIGH = "high"
    MEDIUM = "medium"
    LOW = "low"
    INFO = "info"

class VulnerabilityStatus(str, enum.Enum):
    OPEN = "open"
    FIXED = "fixed"
    ACCEPTED = "accepted"
    FALSE_POSITIVE = "false_positive"

class Vulnerability(Base):
    __tablename__ = "vulnerabilities"
    
    id = Column(PG_UUID(as_uuid=True), primary_key=True, default=uuid4)
    scan_id = Column(PG_UUID(as_uuid=True), nullable=False, index=True)
    title = Column(String(255), nullable=False)
    description = Column(String, nullable=False)
    severity = Column(Enum(Severity), nullable=False)
    status = Column(Enum(VulnerabilityStatus), default=VulnerabilityStatus.OPEN)
    cvss_score = Column(Float, nullable=True)
    cve_id = Column(String(32), nullable=True)
    affected_component = Column(String(255), nullable=True)
    remediation = Column(String, nullable=True)
    references = Column(JSON, default=list)
    created_at = Column(DateTime, default=func.now())
    updated_at = Column(DateTime, default=func.now(), onupdate=func.now())
    
    def __repr__(self):
        return f"<Vulnerability(title='{self.title}', severity='{self.severity}')>"